Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>smart editor</title>\r\n    <script src=\"./blockly_compressed.js\"></script>\r\n    <script src=\"./blocks_compressed.js\"></script>\r\n    <script src=\"./blocks/my_contract_entity.js\" charset=\"UTF-8\"></script>\r\n    <script src=\"./msg/js/zn-hans.js\"></script>\r\n    <script src=\"./generators/generate.js\"></script>\r\n    <script src=\"./jquery-3.4.1.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui@2.15.7/lib/theme-chalk/index.css\">\r\n</head>\r\n<body>\r\n<div id=\"blocklyDiv\" style=\"height: 1000px; width: 1500px;\"></div>\r\n\r\n<p>\r\n    <!--            <button id=\"link\" onclick=\"showCode()\">Show code</button>-->\r\n    <!--        <button id=\"compile\" onclick=\"compile()\">compile</button>-->\r\n    <!--    <button id=\"deploy\" onclick=\"deploy()\">deploy</button>-->\r\n<div id=\"app\">\r\n    <el-button @click=\"showCode_button()\">生成代码（showCode）</el-button>\r\n    <el-button @click=\"compile_button()\" :disabled=\"showButton\">编译（compile）</el-button>\r\n    <el-button @click=\"deploy_button()\" :disabled=\"showButton\">部署（deploy）</el-button>\r\n\r\n<!--    合约部署参数的弹窗-->\r\n    <el-dialog title=\"部署合约构造器参数\" :visible.sync=\"dialogFormVisible_deploy\" width=\"800px\">\r\n        <el-form :model=\"dynamicValidateForm\" ref=\"dynamicValidateForm\" label-width=\"100px\" class=\"demo-dynamic\">\r\n            <el-form-item\r\n                    v-for=\"(domain, index) in dynamicValidateForm.domains\"\r\n                    label-width=\"200px\"\r\n                    :label=\"domain.name\"\r\n                    :key=\"domain.key\"\r\n                    :prop=\"'domains.' + index + '.value'\"\r\n                    :rules=\"{\r\n      required: true, message: '参数不能为空', trigger: 'blur'\r\n    }\"\r\n            >\r\n                <el-input v-model=\"domain.value\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogFormVisible_deploy = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"dialog_deploy_confirm()\">确 定</el-button>\r\n        </div>\r\n    </el-dialog>\r\n\r\n<!--编译结果的弹窗-->\r\n    <el-dialog :title=\"compile_property.title\" :visible.sync=\"dialogFormVisible_compile\" width=\"1200px\">\r\n        <el-form :model=\"compile_property\">\r\n            <el-form-item prop=\"codeResult\">\r\n                <el-input type=\"textarea\" autosize v-model=\"compile_property.code\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogFormVisible_compile = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"dialog_compile_confirm()\">确 定</el-button>\r\n        </div>\r\n    </el-dialog>\r\n\r\n    <!--部署结果的弹窗-->\r\n    <el-dialog :title=\"deploy_property.title\" :visible.sync=\"dialogFormVisible_deploy_result\" width=\"1200px\">\r\n        <el-form :model=\"deploy_property\">\r\n            <el-form-item prop=\"codeResult\">\r\n                <el-input type=\"textarea\" autosize v-model=\"deploy_property.code\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogFormVisible_deploy_result = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"dialog_deploy_result_confirm()\">确 定</el-button>\r\n        </div>\r\n    </el-dialog>\r\n\r\n<!--    生成代码结果-->\r\n    <el-dialog title=\"生成代码结果\" :visible.sync=\"dialogFormVisible_showCode\" width=\"1200px\">\r\n        <el-form :model=\"showCode_property\">\r\n            <el-form-item prop=\"codeResult\">\r\n                <el-input type=\"textarea\" autosize v-model=\"showCode_property.code\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogFormVisible_showCode = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"dialog_showCode_confirm()\">下载合约</el-button>\r\n        </div>\r\n    </el-dialog>\r\n</div>\r\n</p>\r\n\r\n\r\n<xml xmlns=\"https://developers.google.com/blockly/xml\" id=\"toolbox\" style=\"display: none\">\r\n    <category name=\"合约\">\r\n        <block type=\"contract\"></block>\r\n    </category>\r\n    <category name=\"文本\">\r\n        <block type=\"text\"></block>\r\n    </category>\r\n    <category name=\"是否使用继承的合约库\">\r\n        <block type=\"unuse_inherit\"></block>\r\n        <block type=\"use_inherit\"></block>\r\n    </category>\r\n    <category name=\"可继承的合约库\">\r\n        <block type=\"library\"></block>\r\n    </category>\r\n    <category name=\"条款\">\r\n        <block type=\"term\"></block>\r\n    </category>\r\n</xml>\r\n\r\n<script src=\"workspace.js\"></script>\r\n</body>\r\n\r\n<!-- 引入vue组件库 -->\r\n<script src=\"https://cdn.staticfile.org/vue/2.2.2/vue.min.js\"></script>\r\n<script src=\"https://unpkg.com/element-ui@2.15.7/lib/index.js\"></script>\r\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n\r\n<script>\r\n    var Main = {\r\n        data() {\r\n            return {\r\n                dynamicValidateForm: {\r\n                    domains: [],\r\n                },\r\n                dialogFormVisible_deploy: false,\r\n                dialogFormVisible_compile: false,\r\n                dialogFormVisible_showCode: false,\r\n                dialogFormVisible_deploy_result: false,\r\n                compile_property: {\r\n                    title: \"编译结果\",\r\n                    code: \"\",\r\n                },\r\n                showCode_property: {\r\n                    code: \"\"\r\n                },\r\n                deploy_property:{\r\n                    title: \"部署结果\",\r\n                    code:\"\"\r\n                },\r\n                showButton:true,\r\n            };\r\n        },\r\n        methods: {\r\n            showCode_button() {\r\n                this.compile_property.code = \"\";\r\n                this.dialogFormVisible_showCode = true;\r\n                // Generate JavaScript code and display it.\r\n                var topBlocks = workspace.getAllBlocks();\r\n                var codes = [];\r\n                var contractBlock = workspace.getTopBlocks()[0];\r\n                //console.log('contractBlock' + contractBlock.toString());\r\n                console.log('topBlocks', topBlocks)\r\n                for (var i = 0; i < topBlocks.length; i++) {\r\n                    if (topBlocks[i] == contractBlock) {\r\n                        var code = Blockly.codelabGenerator.blockToCode(topBlocks[i]);\r\n                        codes.push(code + '\\n');\r\n                    }\r\n                }\r\n                console.log('code', codes);\r\n                let tmp = codes[0].replace('\\n', '').split('￥');\r\n                //tmp:0是合约名，1是合约描述，2是流程id，3是关联的智能合约库\r\n                console.log(tmp);\r\n                // var url = 'http://localhost:9014/api/generate/code?fileIds=' + tmp[1] + '&contractName=' + tmp[0];\r\n                axios.get('http://localhost:9014/api/generate/code', {\r\n                    params: {\r\n                        fileIds: tmp[1],\r\n                        contractName: tmp[0],\r\n                    }\r\n                }).then(res => {\r\n                    if (res.data.code === 200) {\r\n                        this.showCode_property.code = res.data.data\r\n                    } else if (res.data.code === 403) {\r\n                        this.showCode_property.code = res.data.msg\r\n                    }\r\n                }).catch(response => {\r\n                    this.showCode_property.code = \"编译失败\" + response.data.msg\r\n                })\r\n            },\r\n            compile_button() {\r\n                this.compile_property.code = \"\";\r\n                axios.get('http://localhost:9014/api/truffle/code/compile').then(res => {\r\n                    console.log(res);\r\n                    if (res.data.code === 200) {\r\n                        this.compile_property.code = res.data.data\r\n                    } else if (res.data.code === 403) {\r\n                        this.compile_property.code = res.data.msg\r\n                    }\r\n                }).catch(response => {\r\n                    this.compile_property.code = \"编译失败\" + response.data.msg;\r\n                })\r\n                this.dialogFormVisible_compile = true;\r\n            },\r\n            dialog_showCode_confirm() {\r\n                this.showButton = false;\r\n                $.post({\r\n                    url: 'http://localhost:9014/api/truffle/code/down',\r\n                    data: {\r\n                        \"code\": this.showCode_property.code\r\n                    },\r\n                    success: function (response) {\r\n                        alert(response.msg);\r\n                    }\r\n                })\r\n                this.dialogFormVisible_showCode = false;\r\n            },\r\n            dialog_compile_confirm() {\r\n                this.dialogFormVisible_compile = false;\r\n            },\r\n            //点击确定后部署结果弹窗\r\n            dialog_deploy_confirm() {\r\n                this.dialogFormVisible_deploy_result = true;\r\n                this.dialogFormVisible_deploy = false;\r\n\r\n\r\n            },\r\n            deploy_button() {\r\n                this.dialogFormVisible_deploy = true;\r\n                var topBlocks = workspace.getAllBlocks();\r\n                var codes = [];\r\n                var contractBlock = workspace.getTopBlocks()[0];\r\n                //console.log('contractBlock' + contractBlock.toString());\r\n                console.log('topBlocks', topBlocks)\r\n                for (var i = 0; i < topBlocks.length; i++) {\r\n                    if (topBlocks[i] == contractBlock) {\r\n                        var code = Blockly.codelabGenerator.blockToCode(topBlocks[i]);\r\n                        codes.push(code + '\\n');\r\n                    }\r\n                }\r\n                console.log('code', codes);\r\n                let tmp = codes[0].replace('\\n', '').split('@');\r\n                //从后端获取到参数的个数和参数名\r\n                axios.get('http://localhost:9014/api/query/constructor',{\r\n                    params: {\r\n                        \"fileIds\": tmp[1].toString()\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res);\r\n                    if (res.data.code === 200) {\r\n                        let data = res.data.data;\r\n                        this.dynamicValidateForm.domains.length = 0;\r\n                        if(data.constructorParamNum==null){\r\n                            alert(\"没有构造器或构造器不需要参数，请直接部署\");\r\n                        }\r\n                        else {\r\n                            let constructorParamNum = data.constructorParamNum;\r\n                            let paramInfos = data.paramInfos;\r\n                            for (var i = 0; i < constructorParamNum; i++) {\r\n                                this.dynamicValidateForm.domains.push({value: '', name: paramInfos[i]});\r\n                            }\r\n                        }\r\n                    } else if (res.data.code === 403) {\r\n                        alert(res.data.msg);\r\n                    }\r\n                }).catch(response => {\r\n                    alert(response.data.msg);\r\n                })\r\n            },\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        alert('submit!');\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n            removeDomain(item) {\r\n                var index = this.dynamicValidateForm.domains.indexOf(item)\r\n                if (index !== -1) {\r\n                    this.dynamicValidateForm.domains.splice(index, 1)\r\n                }\r\n            },\r\n            addDomain() {\r\n                this.dynamicValidateForm.domains.push({\r\n                    value: '',\r\n                    key: Date.now()\r\n                });\r\n            }\r\n        }\r\n    }\r\n    var Ctor = Vue.extend(Main)\r\n    new Ctor().$mount('#app')\r\n</script>\r\n\r\n<!--<script>-->\r\n<!--    var mask = document.querySelector('.login-bg');-->\r\n<!--    var login = document.querySelector('.login');-->\r\n<!--    var cancel = document.querySelector('#cancel');-->\r\n<!--    var closeBtn = document.querySelector('#closeBtn');-->\r\n<!--    var sure = document.querySelector('#sure');-->\r\n<!--    var link = document.querySelector('#link');-->\r\n<!--    var textId = document.getElementById(\"textfield\");-->\r\n<!--    var titleName = document.getElementById(\"title\");-->\r\n<!--    var compiles = document.getElementById(\"compile\");-->\r\n<!--    var deploys = document.getElementById(\"deploy\");-->\r\n<!--    var codeData = \"\";-->\r\n\r\n<!--    var mask2 = document.querySelector('.login-bg2');-->\r\n<!--    var login2 = document.querySelector('.login2');-->\r\n<!--    var cancel2 = document.querySelector('#cancel2');-->\r\n<!--    var closeBtn2 = document.querySelector('#closeBtn2');-->\r\n<!--    var sure2 = document.querySelector('#sure2');-->\r\n<!--    var textId2 = document.getElementById(\"textfield2\");-->\r\n<!--    var titleName2 = document.getElementById(\"title2\");-->\r\n\r\n<!--    link.addEventListener('click', function () {-->\r\n<!--        titleName.innerHTML = \"生成的代码展示\";-->\r\n<!--        mask.style.display = 'block';-->\r\n<!--        login.style.display = 'block';-->\r\n<!--    })-->\r\n<!--    cancel.addEventListener('click', function () {-->\r\n<!--        mask.style.display = 'none';-->\r\n<!--        login.style.display = 'none';-->\r\n<!--        textId.innerHTML = \"\";-->\r\n<!--        textId2.innerHTML = \"\";-->\r\n<!--    })-->\r\n<!--    cancel2.addEventListener('click', function () {-->\r\n<!--        mask2.style.display = 'none';-->\r\n<!--        login2.style.display = 'none';-->\r\n<!--        textId.innerHTML = \"\";-->\r\n<!--        textId2.innerHTML = \"\";-->\r\n<!--    })-->\r\n<!--    compiles.addEventListener('click', function () {-->\r\n<!--        titleName2.innerHTML = \"编译结果\";-->\r\n<!--        mask2.style.display = 'block';-->\r\n<!--        login2.style.display = 'block';-->\r\n<!--    })-->\r\n<!--    deploys.addEventListener('click', function () {-->\r\n<!--        titleName2.innerHTML = \"部署结果\";-->\r\n<!--        mask2.style.display = 'block';-->\r\n<!--        login2.style.display = 'block';-->\r\n<!--    })-->\r\n<!--    sure.addEventListener('click', function () {-->\r\n<!--        var data = textId.innerHTML;//要复制的内容-->\r\n<!--        var oInput = document.createElement('input');-->\r\n<!--        oInput.value = data;-->\r\n<!--        document.body.appendChild(oInput);-->\r\n<!--        oInput.select(); // 选择对象-->\r\n<!--        document.execCommand(\"Copy\"); // 执行浏览器复制命令document.execCommand此命令牛逼-->\r\n<!--        oInput.className = 'oInput';-->\r\n<!--        oInput.style.display = 'none';-->\r\n<!--        alert(\"复制成功\");-->\r\n<!--    })-->\r\n\r\n<!--    sure2.addEventListener('click', function () {-->\r\n<!--        var data = textId2.innerHTML;//要复制的内容-->\r\n<!--        var oInput = document.createElement('input');-->\r\n<!--        oInput.value = data;-->\r\n<!--        document.body.appendChild(oInput);-->\r\n<!--        oInput.select(); // 选择对象-->\r\n<!--        document.execCommand(\"Copy\"); // 执行浏览器复制命令document.execCommand此命令牛逼-->\r\n<!--        oInput.className = 'oInput';-->\r\n<!--        oInput.style.display = 'none';-->\r\n<!--        alert(\"复制成功\");-->\r\n<!--    })-->\r\n\r\n<!--    function showCode() {-->\r\n\r\n<!--        // Generate JavaScript code and display it.-->\r\n<!--        var topBlocks = workspace.getAllBlocks();-->\r\n<!--        var codes = [];-->\r\n<!--        var contractBlock = workspace.getTopBlocks()[0];-->\r\n<!--        //console.log('contractBlock' + contractBlock.toString());-->\r\n<!--        console.log(topBlocks)-->\r\n<!--        for (var i = 0; i < topBlocks.length; i++) {-->\r\n<!--            if (topBlocks[i] == contractBlock) {-->\r\n<!--                var code = Blockly.codelabGenerator.blockToCode(topBlocks[i]);-->\r\n<!--                codes.push(code + '\\n');-->\r\n<!--            }-->\r\n<!--        }-->\r\n<!--        console.log(codes);-->\r\n<!--        let tmp = codes[0].replace('\\n', '').split('@');-->\r\n<!--        console.log(tmp);-->\r\n<!--        var url = 'http://localhost:9014/api/generate/code?fileIds=' + tmp[1] + '&contractName=' + tmp[0];-->\r\n<!--        var response = sendHttpGet(url);-->\r\n<!--        // alert(response);-->\r\n<!--    }-->\r\n\r\n<!--    function compile() {-->\r\n<!--        var url = 'http://localhost:9014/api/truffle/code/compile';-->\r\n<!--        var response = sendHttpGet(url);-->\r\n<!--    }-->\r\n\r\n<!--    function deploy() {-->\r\n<!--        var url = 'http://localhost:9014/api/truffle/code/deploy';-->\r\n<!--        var response = sendHttpGet(url);-->\r\n<!--    }-->\r\n\r\n<!--    function down() {-->\r\n<!--        //代码;-->\r\n<!--        var datas = codeData;-->\r\n<!--        console.log('=========' + datas);-->\r\n<!--        $.post({-->\r\n<!--            url: 'http://localhost:9014/api/truffle/code/down',-->\r\n<!--            data: {-->\r\n<!--                \"code\": datas-->\r\n<!--            },-->\r\n<!--            success: function (response) {-->\r\n<!--                alert(response.msg);-->\r\n<!--            }-->\r\n<!--        })-->\r\n<!--    }-->\r\n\r\n<!--    function sendHttpGet(url) {-->\r\n<!--        var httpRequest = new XMLHttpRequest();//第一步：建立所需的对象-->\r\n<!--        httpRequest.open('GET', url, true);//第二步：打开连接  将请求参数写在url中-->\r\n<!--        httpRequest.send();//第三步：发送请求  将请求参数写在URL中-->\r\n<!--        /**-->\r\n<!--         * 获取数据后的处理程序-->\r\n<!--         */-->\r\n<!--        httpRequest.onreadystatechange = function () {-->\r\n<!--            if (httpRequest.readyState == 4 && httpRequest.status == 200) {-->\r\n<!--                var json = httpRequest.responseText;//获取到json字符串，还需解析-->\r\n<!--                console.log('响应结果:' + json);-->\r\n<!--                let data = eval(\"(\" + json + \")\").data;-->\r\n<!--                console.log(data);-->\r\n<!--                let code = eval(\"(\" + json + \")\").code;-->\r\n<!--                let msg = eval(\"(\" + json + \")\").msg;-->\r\n<!--                //alert(data);-->\r\n<!--                if (code == 200) {-->\r\n<!--                    textId.innerHTML = data;-->\r\n<!--                    textId2.innerHTML = data;-->\r\n<!--                    codeData = data;-->\r\n<!--                } else {-->\r\n<!--                    textId.innerHTML = msg;-->\r\n<!--                    textId2.innerHTML = msg;-->\r\n<!--                }-->\r\n<!--                return json;-->\r\n<!--            }-->\r\n<!--        };-->\r\n<!--    }-->\r\n<!--</script>-->\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	
+++ b/index.html	
@@ -20,8 +20,8 @@
     <!--    <button id="deploy" onclick="deploy()">deploy</button>-->
 <div id="app">
     <el-button @click="showCode_button()">生成代码（showCode）</el-button>
-    <el-button @click="compile_button()" :disabled="showButton">编译（compile）</el-button>
-    <el-button @click="deploy_button()" :disabled="showButton">部署（deploy）</el-button>
+    <el-button @click="compile_button()">编译（compile）</el-button>
+    <el-button @click="deploy_button()">部署（deploy）</el-button>
 
 <!--    合约部署参数的弹窗-->
     <el-dialog title="部署合约构造器参数" :visible.sync="dialogFormVisible_deploy" width="800px">
@@ -80,7 +80,7 @@
         </el-form>
         <div slot="footer" class="dialog-footer">
             <el-button @click="dialogFormVisible_showCode = false">取 消</el-button>
-            <el-button type="primary" @click="dialog_showCode_confirm()">下载合约</el-button>
+            <el-button type="primary" @click="dialog_showCode_confirm()">确定</el-button>
         </div>
     </el-dialog>
 </div>
@@ -157,14 +157,15 @@
                 }
                 console.log('code', codes);
                 let tmp = codes[0].replace('\n', '').split('￥');
+
                 //tmp:0是合约名，1是合约描述，2是流程id，3是关联的智能合约库
+
                 console.log(tmp);
                 // var url = 'http://localhost:9014/api/generate/code?fileIds=' + tmp[1] + '&contractName=' + tmp[0];
-                axios.get('http://localhost:9014/api/generate/code', {
-                    params: {
-                        fileIds: tmp[1],
-                        contractName: tmp[0],
-                    }
+                axios.post('http://localhost:9014/api/generate/code', {
+                    fileIds: tmp[1],
+                    contractName: tmp[0],
+                    extendAgreements:tmp[3]
                 }).then(res => {
                     if (res.data.code === 200) {
                         this.showCode_property.code = res.data.data
@@ -190,16 +191,16 @@
                 this.dialogFormVisible_compile = true;
             },
             dialog_showCode_confirm() {
-                this.showButton = false;
-                $.post({
-                    url: 'http://localhost:9014/api/truffle/code/down',
-                    data: {
-                        "code": this.showCode_property.code
-                    },
-                    success: function (response) {
-                        alert(response.msg);
-                    }
-                })
+                // this.showButton = false;
+                // $.post({
+                //     url: 'http://localhost:9014/api/truffle/code/down',
+                //     data: {
+                //         "code": this.showCode_property.code
+                //     },
+                //     success: function (response) {
+                //         alert(response.msg);
+                //     }
+                // })
                 this.dialogFormVisible_showCode = false;
             },
             dialog_compile_confirm() {
@@ -209,6 +210,7 @@
             dialog_deploy_confirm() {
                 this.dialogFormVisible_deploy_result = true;
                 this.dialogFormVisible_deploy = false;
+                //TODO 需要向后端发送数据
 
 
             },
